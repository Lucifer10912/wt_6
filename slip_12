Q1

HTML CODE

<html>
<head>
<style>
span
{
 font-size: 25px;
}
table
{
 color: blueviolet; ;
}
</style>
<script type="text/javascript" >
 function print()
 {
 var ob=false;
 ob=new XMLHttpRequest();
 
 ob.open("GET","a1.php?");
 ob.send(); 
 
 ob.onreadystatechange=function()
 {
 if(ob.readyState==4 && ob.status==200)
 {
 document.getElementById("i").innerHTML=ob.responseText;
 }
 }
 } 
</script>
</head>
<body>
<center>
<h3>Display the contents of a contact.dat file </h3>
<form id="myform" action="a1.php" method="GET">
<br><input type="button" value=Print onclick="print()">
</form>
<span id="i"></span>
</center>
</body>
</html>




Q2

import matplatlib pyplat as pit import numpy as np import pandas as pol
From sklearn linear_model import
Linear Regression
From sklearn metrics import mean-squand error,
r2 - Score
foom skleam - model_ selection import train - test-spli
dtata=f
'ID' : range (1, 501);
" Elat' : np. random uniForm (50, 150, 500);
'Houses': np. random. uniform (100,300, 500);
'Purchases' : Ap. random uniForm (50, 150,500) }
dF = Pd. Data Frame (data)
print (df. sample (s))
print (dF. shape)
new _df =dF Edf [' purchases] > = 12)
print (new - df. shape)
new-df = new-dF C['Flat', 'Purchases' I]
new _ dF. sample (5)
x = np. array (new -dF ('Flat 13)
y = np. array (new - dF (' Purchases'])
print ex- shape) print (y-shape)
p/t. Subplot (221)
plt. scatter (x, y, color = * red)
plt. title ('Flat Us purchases')
p/t. xlabel ("Flat")
pIt: ylabel ("Purchases")
a-train x. test, y-train, y-test = bain-tot
split (o,y, test - size = 0.25, zandom stake (s
regressor = linear Regression()
regns502. Fit (x-train, ybain)
pIt-subplot (222)
plt: scatter (oc-test, y-test, color = "green'")
p|t. plot (x test, regrssor.predict(X-test),
color red', linewidth = 3)
plt. title Regussion (Test set)")
p/t xlabel ('Flat')
plt. ylabel (Purchases')
p/t: subplot (223)
p/t. scatter (x-taun; y train, Color = green)
p/t. plot (x- bain, HegH550r. predict (x-tain),
Color = red', linewidth = 3)
plt. title "Regression (Todininy set) ")
plt. sclabel ("Flat" )
ply. ylabel ("Purchases" )
plt. tight_ layout ( )
plt. show ()
